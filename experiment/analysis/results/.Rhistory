data = read.csv("master.csv", header = TRUE)
fit <- aov(jnd ~ vis + rbase:rdirection, data=data)
layout(matrix(c(1,2,3,4),2,2)) # optional layout 
plot(fit) # diagnostic plots
summary(fit) # display Type I ANOVA table
drop1(fit,~.,test="F") # type III SS and F Tests
TukeyHSD(fit) # where fit comes from aov()
library('ggplot2')
install.packages("ggplot2")
TukeyHSD(fit) # where fit comes from aov()
fit <- aov(jnd ~ vis + factor(rbase):rdirection, data=data)
summary(fit) # display Type I ANOVA table
TukeyHSD(fit) # where fit comes from aov()
fit <- aov(jnd ~ vis:factor(rbase):rdirection, data=data)
summary(fit) # display Type I ANOVA table
TukeyHSD(fit) # where fit comes from aov()
fit <- aov(jnd ~ vis:rdirection, data=data)
drop1(fit,~.,test="F") # type III SS and F Tests
TukeyHSD(fit) # where fit comes from aov()
sink(file = "tukey.txt", TukeyHSD(fit))
capture.output(TukeyHSD(fit), file="tukey.txt")
savehistory(file="rhist.txt")
savehistory(file="rhist.txt")
data = read.csv("master.csv", header = TRUE)
drop1(fit,~.,test="F") # type III SS and F Tests
fit <- aov(jnd ~ vis:rdirection, data=data)
drop1(fit,~.,test="F") # type III SS and F Tests
fit <- aov(jnd ~ vis:rdirection + rbase, data=data)
drop1(fit,~.,test="F") # type III SS and F Tests
TukeyHSD(fit) # where fit comes from aov()
fit <- aov(jnd ~ vis:rdirection + factor(rbase), data=data)
drop1(fit,~.,test="F") # type III SS and F Tests
TukeyHSD(fit) # where fit comes from aov()
fit <- aov(jnd ~ vis:rdirection:factor(rbase), data=data)
drop1(fit,~.,test="F") # type III SS and F Tests
TukeyHSD(fit) # where fit comes from aov()
capture.output(TukeyHSD(fit), file="shit.txt")
fit
fit <- aov(jnd ~ vis:rdirection:factor(rbase), data=data)
drop1(fit,~.,test="F") # type III SS and F Tests
fit <- aov(jnd ~ vis:rdirection*factor(rbase), data=data)
drop1(fit,~.,test="F") # type III SS and F Tests
TukeyHSD(fit) # where fit comes from aov()
capture.output(TukeyHSD(fit), file="shit2.txt")
fit <- aov(jnd ~ vis:rdirection*rbase, data=subset(data, approach=="below"))
fit
summary(fit)
tukeyHSD(fit)
TukeyHSD(fit)
TukeyHSD(fit) # where fit comes from aov()
fit <- aov(jnd ~ vis:rdirection*factor(rbase), data=subset(data, approach=="below"))
TukeyHSD(fit) # where fit comes from aov()
capture.output(TukeyHSD(fit), file="hsd.txt")
capture.output(summary(fit), file="summary.txt")
fit <- aov(jnd ~ rdirection * approach * vis + factor(rbase), data=subset(data)
)
summary(fit)
drop1(fit,~.,test="F") # type III SS and F Tests
fit <- drop1(fit,~.,test="F") # type III SS and F Tests
summary(fit)
fit
TukeyHSD(fit)
fit <- aov(jnd ~ rdirection * approach * vis + factor(rbase), data=subset(data))
drop1(fit,~.,test="F") # type III SS and F Tests
TukeyHSD(fit)
capture.output(TukeyHSD(fit), file="hsd2.txt")
fit <- aov(jnd ~ vis:rdirection*factor(rbase), data=subset(data, approach=="below"))
summary(fit)
drop1(fit,~.,test="F") # type III SS and F Tests
fit <- aov(jnd ~ vis:rdirection*factor(rbase), data=subset(data, approach=="above"))
drop1(fit,~.,test="F") # type III SS and F Tests
subset(data, approach=="above")
fit <- aov(jnd ~ vis:rdirection*factor(rbase), data=subset(data, approach=="above"))
summary(fit)
drop1(fit,~.,test="F") # type III SS and F Tests
fit <- aov(jnd ~ vis:rdirection*factor(rbase), data=subset(data, approach=="below"))
drop1(fit,~.,test="F") # type III SS and F Tests
drop1(fit,~.,test="F") # type III SS and F Tests
fit <- aov(jnd ~ vis:rdirection*factor(rbase), data=data)
drop1(fit,~.,test="F") # type III SS and F Tests
data
fit <- aov(jnd ~ vis:rdirection:rbase:approach, data=data)
drop1(fit,~.,test="F") # type III SS and F Tests
fit <- aov(jnd ~ vis:rdirection*factor(rbase), data=subset(data, approach=="below"
)
)
ls
clear()
clear
kruskal.text(jnd~vis, data=data)
kruskal.test(jnd~vis, data=data)
kruskal.test(jnd~ vis:rdirection+factor(rbase), data=data)
kruskal.test(jnd~approach, data=data)
kruskal.test(jnd~ vis:rdirection+factor(rbase), data=data)
kruskal.test(jnd~ vis:rdirection+factor(rbase), data=subset(data, approach=="above"))
kruskal.test(jnd~ vis:rdirection+factor(rbase), data=subset(data, approach=="below"))
wilcox.test(subset(data, approach=="below" && rdirection=="negative" && vis=="scatterplot" && rbase=="0.8"), subset(data, approach=="above" && rdirection=="positive" && vis=="scatterplot" && rbase==""0.8"))
wilcox.test(subset(data, approach=="below" && rdirection=="negative" && vis=="scatterplot" && rbase=="0.8"), subset(data, approach=="above" && rdirection=="positive" && vis=="scatterplot" && rbase==""0.8"))
wilcox.test(subset(data, approach=="below" && rdirection=="negative" && vis=="scatterplot" && rbase=="0.8"), subset(data, approach=="above" && rdirection=="positive" && vis=="scatterplot" && rbase==""0.8"))
A = subset(data, approach=="below" & rdirection=="negative")
A$jnd
A
data
A = subset(data, approach=="below")
wilcox.test(subset(data, approach=="below" & rdirection=="negative" & vis=="scatterplot" & rbase=="0.8"), subset(data, approach=="above" & rdirection=="positive" & vis=="scatterplot" & rbase==""0.8"))
A = subset(data, approach=="below")
A
A = subset(data, approach=="below" & rdirection="negative")
A <- subset(data, approach=="below" & rdirection="negative")
A <- subset(data, approach=="below" & rdirection=="negative")
A
wilcox.test(subset(data, approach=="below" & rdirection=="negative" & vis=="scatterplot" & rbase=="0.8"), subset(data, approach=="above" & rdirection=="positive" & vis=="scatterplot" & rbase==""0.8"))
wilcox.test(subset(data, approach=="below" & rdirection=="negative" & vis=="scatterplot" & rbase=="0.8"), subset(data, approach=="above" & rdirection=="positive" & vis=="scatterplot" & rbase=="0.8"))
wilcox.test(subset(data, approach=="below" & rdirection=="negative" & vis=="scatterplot" & rbase=="0.8")$jnd, subset(data, approach=="above" & rdirection=="positive" & vis=="scatterplot" & rbase=="0.8")$jnd)
wilcox.test(subset(data, approach=="below" & rdirection=="negative" & vis=="scatterplot" & rbase=="0.3")$jnd, subset(data, approach=="above" & rdirection=="positive" & vis=="scatterplot" & rbase=="0.3")$jnd)
wilcox.test(subset(data, approach=="below" & rdirection=="negative" & vis=="scatterplot")$jnd, subset(data, approach=="above" & rdirection=="positive" & vis=="scatterplot")$jnd)
wilcox.test(subset(data, approach=="below" & rdirection=="negative" & vis=="scatterplot")$jnd, subset(data, approach=="above" & rdirection=="negative" & vis=="parallelCoordinates")$jnd)
wilcox.test(subset(data, approach=="below" & rdirection=="positive" & vis=="scatterplot")$jnd, subset(data, approach=="above" & rdirection=="negative" & vis=="parallelCoordinates")$jnd)
wilcox.test(subset(data, approach=="below" & rdirection=="positive" & vis=="parallelCoordinates")$jnd, subset(data, approach=="above" & rdirection=="negative" & vis=="parallelCoordinates")$jnd)
wilcox.test(subset(data, approach=="below" & rdirection=="positive" & vis=="radar")$jnd, subset(data, approach=="above" & rdirection=="positive" & vis=="line")$jnd)
wilcox.test(subset(data, rdirection=="positive" & vis=="radar")$jnd, subset(data, rdirection=="positive" & vis=="line")$jnd)
wilcox.test(subset(data, rdirection=="negative" & vis=="donut")$jnd, subset(data, rdirection=="negative" & vis=="stackedbar")$jnd)
wilcox.test(subset(data, rdirection=="positive" & vis=="radar")$jnd, subset(data, rdirection=="positive" & vis=="line")$jnd)
wilcox.test(subset(data, rdirection=="positive" & vis=="radar")$jnd, subset(data, rdirection==" & vis=="line")$jnd)
wilcox.test(subset(data, rdirection=="positive" & vis=="radar")$jnd, subset(data, rdirection=="positive" & vis=="line")$jnd)
wilcox.test(subset(data, rdirection=="negative" & vis=="stackarea")$jnd, subset(data, rdirection=="negative" & vis=="stackedbar")$jnd)
wilcox.test(subset(data, rdirection=="negative" & vis=="stackedarea")$jnd, subset(data, rdirection=="negative" & vis=="stackedbar")$jnd)
wilcox.test(subset(data, rdirection=="negative" & vis=="stackedarea")$jnd, subset(data, rdirection=="negative" & vis=="stackedline")$jnd)
wilcox.test(subset(data, rdirection=="negative" & vis=="stackedarea")$jnd, subset(data, rdirection=="negative" & vis=="stackedbar")$jnd)
wilcox.test(subset(data, rdirection=="negative" & vis=="stackedarea")$jnd, subset(data, rdirection=="negative" & vis=="stackedline")$jnd)
wilcox.test(subset(data, rdirection=="negative" & vis=="stackedarea")$jnd, subset(data, rdirection=="negative" & vis=="stackedbar")$jnd)
wilcox.test(subset(data, rdirection=="negative" & vis=="stackedline")$jnd, subset(data, rdirection=="negative" & vis=="stackedbar")$jnd)
q()
